/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfWriter;
import dao.ChiTietPhieuDatPhong_DAO;
import dao.KhachHang_DAO;
import dao.NhanVien_DAO;
import dao.PhieuDatPhong_DAO;
import dao.Phong_DAO;
import dao.TaiKhoan_DAO;
import entity.ChiTietPhieuDatPhong;
import entity.KhachHang;
import entity.NhanVien;
import entity.PhieuDatPhong;
import entity.Phong;
import entity.TrangThaiPhong;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import static javax.swing.UIManager.getIcon;

/**
 *
 * @author M S I
 */
public class JPanel_DatPhong extends javax.swing.JPanel {

    private Phong_DAO p_dao;
    private KhachHang_DAO kh_dao;
    private PhieuDatPhong_DAO pdp_dao;
    private NhanVien_DAO nv_dao;
    private ChiTietPhieuDatPhong_DAO ctpdp_dao;
    private JPanel_QuanLyPhong pnl_qlp;

    /**
     * Creates new form InfoPhong
     */
    public JPanel_DatPhong(String maPhong) throws IOException, SQLException {
        initComponents();
        loadData(maPhong);
//        FlatIntelliJLaf.registerCustomDefaultsSource("style");
//        FlatIntelliJLaf.setup();
    }

    public void loadData(String maPhong) throws IOException, SQLException {
        pnl_qlp = new JPanel_QuanLyPhong();
        p_dao = new Phong_DAO();
        pdp_dao = new PhieuDatPhong_DAO();
        nv_dao = new NhanVien_DAO();
        ctpdp_dao = new ChiTietPhieuDatPhong_DAO();
        Phong phong = p_dao.getPhongTheoTenPhong(maPhong).getFirst();
        txt_tenNV.setText(nv_dao.getNhanVienDangNhap());
        txt_maPhieu.setText(genMaPDP());
        txt_phong.setText(phong.getTenPhong());
        LocalDate ngayHienTai = LocalDate.now();
        txt_ngayDatPhong.setText(ngayHienTai.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));

    }

    public PhieuDatPhong taoPhieu() throws SQLException, IOException {
        String ma = txt_maPhieu.getText().toString();
        String tenKH = txt_tenKhachHang.getText().toString();
        KhachHang kh = kh_dao.getKhachHangTheoTen(tenKH);
        String tenNV = txt_tenNV.getText().toString();
        NhanVien nv = nv_dao.getNhanVienTheoTen(tenNV);
        int soLuongKhach = Integer.parseInt((String) cb_soLuongKhach.getSelectedItem());
        LocalDate ngayDatPhong = LocalDate.now();
        LocalDate ngayNhanPhong = convertToLocalDate(btn_ngayNhanPhong.getDate());
        LocalDate ngayTraPhong = convertToLocalDate(btn_ngayTraPhong.getDate());

        return new PhieuDatPhong(ma, kh, nv, soLuongKhach, ngayDatPhong, ngayNhanPhong, ngayTraPhong);
    }

    public ChiTietPhieuDatPhong taoChiTietPDP() throws IOException, SQLException {
        String ma = txt_maPhieu.getText().toString();
        PhieuDatPhong pdp = pdp_dao.getPhieuDatPhongMoiNhat();
        String maPhong = txt_phong.getText().toString();
        Phong phong = p_dao.getPhongTheoTenPhong(maPhong).getFirst();

        return new ChiTietPhieuDatPhong(pdp, phong);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_maPhieu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_tenNV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_phong = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_sdtKH = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_ngayDatPhong = new javax.swing.JTextField();
        txt_tenKhachHang = new javax.swing.JTextField();
        btn_timSDT = new javax.swing.JButton();
        btn_themPhong = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btn_datNgay = new javax.swing.JButton();
        cb_soLuongKhach = new javax.swing.JComboBox<>();
        btn_ngayNhanPhong = new com.toedter.calendar.JDateChooser();
        btn_ngayTraPhong = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(0, 153, 153));
        setPreferredSize(new java.awt.Dimension(800, 400));
        setVerifyInputWhenFocusTarget(false);
        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Đặt Phòng");
        add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel1.setPreferredSize(new java.awt.Dimension(931, 200));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        jLabel2.setText("Mã phiếu đặt phòng:");

        txt_maPhieu.setEditable(false);
        txt_maPhieu.setEnabled(false);
        txt_maPhieu.setFocusable(false);
        txt_maPhieu.setRequestFocusEnabled(false);
        txt_maPhieu.setVerifyInputWhenFocusTarget(false);

        jLabel3.setText("Nhân viên:");

        txt_tenNV.setEditable(false);
        txt_tenNV.setEnabled(false);
        txt_tenNV.setFocusable(false);
        txt_tenNV.setRequestFocusEnabled(false);

        jLabel4.setText("Số lượng khách:");

        txt_phong.setEditable(false);
        txt_phong.setEnabled(false);
        txt_phong.setFocusable(false);
        txt_phong.setRequestFocusEnabled(false);

        jLabel5.setText("Số điện thoại KH:");

        jLabel6.setText("Phòng:");

        jLabel7.setText("Khách hàng:");

        jLabel8.setText("Ngày nhận phòng:");

        jLabel9.setText("Ngày đặt phòng:");

        txt_ngayDatPhong.setEditable(false);
        txt_ngayDatPhong.setEnabled(false);
        txt_ngayDatPhong.setFocusable(false);
        txt_ngayDatPhong.setRequestFocusEnabled(false);

        txt_tenKhachHang.setEditable(false);
        txt_tenKhachHang.setEnabled(false);
        txt_tenKhachHang.setFocusable(false);
        txt_tenKhachHang.setRequestFocusEnabled(false);

        btn_timSDT.setIcon(new FlatSVGIcon("./icon/search_1.svg"));
        btn_timSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timSDTActionPerformed(evt);
            }
        });

        btn_themPhong.setIcon(new FlatSVGIcon("./icon/add.svg"));

        jLabel10.setText("Ngày trả phòng:");

        btn_datNgay.setIcon(new FlatSVGIcon("./icon/add.svg"));
        btn_datNgay.setText("Đặt Ngay");
        btn_datNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_datNgayActionPerformed(evt);
            }
        });

        cb_soLuongKhach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6","7","8"}));
        cb_soLuongKhach.setPreferredSize(new java.awt.Dimension(50, 22));

        btn_ngayNhanPhong.setDateFormatString("dd-MM-yyyy");
        btn_ngayNhanPhong.setPreferredSize(new java.awt.Dimension(64, 22));
        btn_ngayNhanPhong.setRequestFocusEnabled(false);

        btn_ngayTraPhong.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_datNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txt_phong, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_themPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_maPhieu, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_ngayNhanPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_ngayTraPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cb_soLuongKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txt_sdtKH, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_timSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_tenNV)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_tenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_ngayDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_maPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_tenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_timSDT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_phong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_sdtKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_themPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_tenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_soLuongKhach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_ngayDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_ngayNhanPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_ngayTraPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(btn_datNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_timSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timSDTActionPerformed
        try {
            // TODO add your handling code here:
            kh_dao = new KhachHang_DAO();
            String sdt = txt_sdtKH.getText().trim();
            if (sdt.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bạn chưa nhập số điện thoại");
                txt_sdtKH.requestFocus();
            } else if (!txt_sdtKH.getText().matches("^0\\d{9}$")) {
                JOptionPane.showMessageDialog(this, "Số điện thoại chỉ có 10 kí tự số và bắt đầu bằng số 0");
                txt_sdtKH.requestFocus();
            } else if (kh_dao.getKhachHangTheoMa(sdt) == null) {
                int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm khách hàng không?", "Chú ý không có khách hàng này", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    txt_sdtKH.requestFocus();
                    JPanel_ThemKHNhanh themKHNhanhPanel;
                    themKHNhanhPanel = new JPanel_ThemKHNhanh();
                    JFrame themKHFrame = new JFrame("Thêm Khách Hàng Nhanh");
                    themKHFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    themKHFrame.add(themKHNhanhPanel);
                    themKHFrame.pack();
                    themKHFrame.setLocationRelativeTo(null);
                    themKHFrame.setVisible(true);
                } else {
                    txt_sdtKH.requestFocus();
                }
            } else {
                txt_tenKhachHang.setText(kh_dao.getKhachHangTheoMa(sdt).getHoTenKhachHang());
                txt_sdtKH.requestFocus();
            }
        } catch (IOException ex) {
            Logger.getLogger(JPanel_DatPhong.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JPanel_DatPhong.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_timSDTActionPerformed

    private void btn_datNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_datNgayActionPerformed
        boolean kt = true;
        LocalDate now = LocalDate.now();
        LocalDate ngayNhanPhong = convertToLocalDate(btn_ngayNhanPhong.getDate());
        LocalDate ngayTraPhong = convertToLocalDate(btn_ngayTraPhong.getDate());
        if (ngayNhanPhong.isAfter(now) == false) {
            JOptionPane.showMessageDialog(null, "Ngày nhận phòng phải sau ngày hiện tại");
            kt = false;
        }
        if (ngayTraPhong.isAfter(ngayNhanPhong) == false) {
            JOptionPane.showMessageDialog(null, "Ngày trả phòng dự kiến phải sau ngày nhận phòng");
            kt = false;
        }
        if (txt_tenKhachHang.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa có khách hàng");
            txt_sdtKH.requestFocus();
            kt = false;
        }
        if (kt == true) {
            try {
                PhieuDatPhong pdp = taoPhieu();
                pdp_dao.createPhieuDatPhong(pdp);
                String maPhong = txt_phong.getText();
                Phong phong = p_dao.getPhongTheoTenPhong(maPhong).getFirst();
                ChiTietPhieuDatPhong ctpdp = taoChiTietPDP();
                ctpdp_dao.create(ctpdp);
                p_dao.capNhatTrangThaiPhong(maPhong, "BOOKED");
                JOptionPane.showMessageDialog(null, "Đặt thành công");
                int comfirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn in phiếu đặt phòng?",
                        "Chú ý", JOptionPane.YES_NO_OPTION);
                if (comfirm == JOptionPane.YES_OPTION) {
                    Document document = new Document();
                    try {
                        PdfWriter.getInstance(document,
                                new FileOutputStream("data/phieuDatPhongBanPDF/PhieuDatPhong.pdf"));
                        BaseFont unicodeFont = BaseFont.createFont("data/font/font-times-new-roman.ttf",
                                BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                        com.itextpdf.text.Font font = new com.itextpdf.text.Font(unicodeFont, 14);

                        document.open();
                        Paragraph p = new Paragraph("KHÁCH SẠN AN NHIÊN", font);
                        document.add(p);

                        Paragraph p1 = new Paragraph(
                                "Địa chỉ: Số 12 Nguyễn Văn Bảo, Phường 4, Quận Gò Vấp, Thành phố Hồ Chí Minh", font);
                        document.add(p1);
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
                        LocalDateTime currentDateTime = LocalDateTime.now();
                        String formattedDateTime = currentDateTime.format(formatter);
                        Paragraph p8 = new Paragraph("Ngày lập phiếu: " + formattedDateTime, font);
                        document.add(p8);
                        font.setSize(30);
                        Paragraph p2 = new Paragraph("Phiếu Đặt Phòng", font);
                        p2.setAlignment(Element.ALIGN_CENTER);
                        document.add(p2);
                        font.setSize(14);
                        Paragraph p3 = new Paragraph(
                                "Mã phiếu đặt phòng: " + pdp.getMaPhieuDatPhong(), font);
                        Paragraph p4 = new Paragraph("Nhân viên: " + nv_dao.getNhanVienDangNhap(), font);
                        String tenKH = txt_tenKhachHang.getText().toString();
                        Paragraph p5 = new Paragraph("Khách hàng: " + tenKH, font);
                        String ten = phong.getTenPhong();
                        Paragraph p7 = new Paragraph("Tên phòng: " + ten, font);
                        Paragraph p9 = new Paragraph("Ngày nhận phòng dự kiến: " + ngayNhanPhong.toString(), font);
                        document.add(p3);
                        document.add(p4);
                        document.add(p5);
                        document.add(p7);
                        document.add(p9);

                        document.close();
                    } catch (DocumentException | FileNotFoundException e1) {
                        e1.printStackTrace();
                    } catch (IOException e1) {
                        // TODO Auto-generated catch block
                        e1.printStackTrace();
                    }
                    try {
                        if (Desktop.isDesktopSupported()) {
                            File pdfFile = new File("data/phieuDatPhongBanPDF/PhieuDatPhong.pdf");
                            Desktop.getDesktop().open(pdfFile);
                        } else {
                            System.out.println("Môi trường không hỗ trợ mở tệp PDF.");
                        }
                    } catch (IOException e1) {
                        e1.printStackTrace();
                    }
                }

                //this.dispose();
                pnl_qlp.removeAll();
                pnl_qlp.revalidate();
                pnl_qlp.repaint();
            } catch (SQLException ex) {
                Logger.getLogger(JPanel_DatPhong.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JPanel_DatPhong.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.removeAll();
            
        }


    }//GEN-LAST:event_btn_datNgayActionPerformed
    public String genMaPDP() {
//    Bao gồm 19 ký tự có dạng MPDPhhppddmmyyyyxxx.
//    Trong đó:
//    - hh là giờ lập phiếu
//    - pp: là phút lập phiếu
//    - dd: là ngày lập phiếu
//    - mm: là tháng lập phiếu
//    - yyyy: là năm lập phiếu
//    - xxx: là ba số nguyên dương được hệ thống phát sinh tăng dần.
        int hour = Calendar.getInstance().get(Calendar.HOUR_OF_DAY);
        String hh = String.format("%02d", hour);
        int minute = Calendar.getInstance().get(Calendar.MINUTE);
        String pp = String.format("%02d", minute);
        if (minute < 10) {
            pp = String.format("0%01d", minute);
        }
        int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        String dd = String.format("%02d", day);
        if (day < 10) {
            dd = String.format("0%01d", day);
        }
        int month = Calendar.getInstance().get(Calendar.MONTH) + 1;
        String mm = String.format("%02d", month);
        if (month < 10) {
            mm = String.format("0%01d", month);
        }
        int year = Calendar.getInstance().get(Calendar.YEAR);
        String yyyy = String.format("%04d", year);
        int soLuong = pdp_dao.demSoLuongPDPTheoMaMau(year);
        String formattedNumber = String.format("%03d", soLuong);
        System.out.println(soLuong);
        return String.format("MPDP" + hh + pp + dd + mm + yyyy + formattedNumber);
    }

    private LocalDate convertToLocalDate(Date date) {
        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_datNgay;
    private com.toedter.calendar.JDateChooser btn_ngayNhanPhong;
    private com.toedter.calendar.JDateChooser btn_ngayTraPhong;
    private javax.swing.JButton btn_themPhong;
    private javax.swing.JButton btn_timSDT;
    private javax.swing.JComboBox<String> cb_soLuongKhach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_maPhieu;
    private javax.swing.JTextField txt_ngayDatPhong;
    private javax.swing.JTextField txt_phong;
    private javax.swing.JTextField txt_sdtKH;
    private javax.swing.JTextField txt_tenKhachHang;
    private javax.swing.JTextField txt_tenNV;
    // End of variables declaration//GEN-END:variables
}
