/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import connectDB.ConnectDB;
import dao.TaiKhoan_DAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author ASUS
 */
public class JFrame_doiMatKhau extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form JFrame_Login
     *
     * @throws java.lang.Exception
     */
    private TaiKhoan_DAO tk_dao = new TaiKhoan_DAO();
    private JFrame_loading loadingScreen;

    /**
     * Creates new form JFrame_Login
     *
     * @throws java.lang.Exception
     */
    public JFrame_doiMatKhau() throws Exception {
        loadingScreen = new JFrame_loading();
        loadingScreen.showLoadingScreen(); // Show the loading screen

        // Create a scheduled executor service
        ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();

        // Schedule a task to hide the loading screen after a delay of 3 seconds (adjust as needed)
        executor.schedule(() -> {
            loadingScreen.hideLoadingScreen(); // Hide the loading screen
            initComponents(); // Initialize components
            setResizable(false);
            addEvents();
        }, 0, TimeUnit.SECONDS);

        try {
            ConnectDB.getInstance().connect();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_DangNhap = new javax.swing.JPanel();
        btn_dangNhap = new javax.swing.JButton();
        txt_dangNhap = new javax.swing.JLabel();
        lb_matKhau1 = new javax.swing.JLabel();
        txt_newPass = new javax.swing.JPasswordField();
        btn_doiMatKhau = new javax.swing.JButton();
        lb_matKhau = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        txt_taiKhoan = new javax.swing.JTextField();
        lb_tenNhanVien = new javax.swing.JLabel();
        UI_login = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pn_DangNhap.setLayout(null);

        btn_dangNhap.setBackground(new java.awt.Color(0, 102, 102));
        btn_dangNhap.setText("Đăng Nhập");
        pn_DangNhap.add(btn_dangNhap);
        btn_dangNhap.setBounds(140, 590, 300, 40);

        txt_dangNhap.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        txt_dangNhap.setForeground(new java.awt.Color(255, 255, 255));
        txt_dangNhap.setText("Đổi Mật Khẩu");
        pn_DangNhap.add(txt_dangNhap);
        txt_dangNhap.setBounds(100, 220, 360, 120);

        lb_matKhau1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_matKhau1.setForeground(new java.awt.Color(255, 255, 255));
        lb_matKhau1.setText("Mật khẩu mới :");
        pn_DangNhap.add(lb_matKhau1);
        lb_matKhau1.setBounds(100, 480, 150, 40);

        txt_newPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_newPassActionPerformed(evt);
            }
        });
        pn_DangNhap.add(txt_newPass);
        txt_newPass.setBounds(250, 480, 220, 40);

        btn_doiMatKhau.setBackground(new java.awt.Color(51, 153, 255));
        btn_doiMatKhau.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btn_doiMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        btn_doiMatKhau.setText("Đổi mật khẩu");
        btn_doiMatKhau.setFocusPainted(false);
        btn_doiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doiMatKhauActionPerformed(evt);
            }
        });
        pn_DangNhap.add(btn_doiMatKhau);
        btn_doiMatKhau.setBounds(140, 530, 300, 50);

        lb_matKhau.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_matKhau.setForeground(new java.awt.Color(255, 255, 255));
        lb_matKhau.setText("Mật khẩu:");
        pn_DangNhap.add(lb_matKhau);
        lb_matKhau.setBounds(140, 430, 100, 40);

        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });
        pn_DangNhap.add(txt_password);
        txt_password.setBounds(250, 430, 220, 40);

        txt_taiKhoan.setText("Mã Nhân Viên ...");
        txt_taiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_taiKhoanActionPerformed(evt);
            }
        });
        pn_DangNhap.add(txt_taiKhoan);
        txt_taiKhoan.setBounds(250, 380, 220, 40);

        lb_tenNhanVien.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_tenNhanVien.setForeground(new java.awt.Color(255, 255, 255));
        lb_tenNhanVien.setText("Tài khoản:");
        pn_DangNhap.add(lb_tenNhanVien);
        lb_tenNhanVien.setBounds(140, 380, 100, 40);

        UI_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/screen_Login.png"))); // NOI18N
        pn_DangNhap.add(UI_login);
        UI_login.setBounds(0, 0, 940, 760);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_DangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_DangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed

    private void btn_doiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doiMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_doiMatKhauActionPerformed

    private void txt_taiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_taiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_taiKhoanActionPerformed

    private void txt_newPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_newPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_newPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_doiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrame_doiMatKhau().setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UI_login;
    private javax.swing.JButton btn_dangNhap;
    private javax.swing.JButton btn_doiMatKhau;
    private javax.swing.JLabel lb_matKhau;
    private javax.swing.JLabel lb_matKhau1;
    private javax.swing.JLabel lb_tenNhanVien;
    private javax.swing.JPanel pn_DangNhap;
    private javax.swing.JLabel txt_dangNhap;
    private javax.swing.JPasswordField txt_newPass;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_taiKhoan;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        Object o = e.getSource();
        if (o.equals(btn_doiMatKhau)) {
            try {
                String taiKhoan = txt_taiKhoan.getText();
                char[] matKhau = txt_password.getPassword();
                String matKhau_use = new String(matKhau);
                System.out.println(matKhau_use);
                String matKhau_new = new String(txt_newPass.getPassword());
                TaiKhoan_DAO tk_dao = new TaiKhoan_DAO();
                tk_dao.dMatKhau(taiKhoan, matKhau_use, matKhau_new);
                JOptionPane.showMessageDialog(this, "Đã thay đổi mật khẩu thành công");
            } catch (Exception ex) {
                Logger.getLogger(JFrame_doiMatKhau.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (o.equals(btn_dangNhap)) {
            JFrame_Login new_Log;
            try {
                new_Log = new JFrame_Login();
                new_Log.setVisible(true);
                this.setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(JFrame_doiMatKhau.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    public void addEvents() {
        btn_doiMatKhau.addActionListener(this);
        btn_dangNhap.addActionListener(this);
    }
}
